#!/usr/bin/env python3
"""
Script para popular MongoDB Atlas diretamente com dados
"""
import os
from pymongo import MongoClient
import uuid
from datetime import datetime, timedelta
from passlib.context import CryptContext
import sys

def populate_atlas_direct():
    """Popula o Atlas diretamente via MongoDB"""
    
    # Connection string do Atlas
    atlas_url = input("Cole a connection string do MongoDB Atlas: ")
    
    if not atlas_url:
        print("‚ùå Connection string n√£o fornecida")
        return
    
    try:
        client = MongoClient(atlas_url)
        db = client["consultorio_db"]
        pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")
        
        print("üîÑ Conectado ao Atlas. Populando dados...")
        
        # Clear existing data
        print("üóëÔ∏è  Limpando dados existentes...")
        db.users.delete_many({})
        db.patients.delete_many({})
        db.doctors.delete_many({})
        db.appointments.delete_many({})
        db.consultorios.delete_many({})
        
        # 1. Create Users
        print("üë• Criando usu√°rios...")
        users_data = [
            {
                "id": str(uuid.uuid4()),
                "username": "admin",
                "email": "admin@consultorio.com",
                "full_name": "Administrador",
                "role": "admin",
                "password_hash": pwd_context.hash("admin123"),
                "is_active": True,
                "created_at": datetime.utcnow()
            },
            {
                "id": str(uuid.uuid4()),
                "username": "recepcao",
                "email": "recepcao@consultorio.com",
                "full_name": "Recep√ß√£o Geral",
                "role": "reception", 
                "password_hash": pwd_context.hash("recepcao123"),
                "is_active": True,
                "created_at": datetime.utcnow()
            },
            {
                "id": str(uuid.uuid4()),
                "username": "dr.silva",
                "email": "dr.silva@consultorio.com", 
                "full_name": "Dr. Jo√£o Silva",
                "role": "doctor",
                "password_hash": pwd_context.hash("doctor123"),
                "is_active": True,
                "created_at": datetime.utcnow()
            }
        ]
        
        db.users.insert_many(users_data)
        print(f"   ‚úÖ {len(users_data)} usu√°rios criados")
        
        # 2. Create Consultorios
        print("üè• Criando consult√≥rios...")
        consultorios_data = [
            {
                "id": str(uuid.uuid4()),
                "name": "C1",
                "description": "Consult√≥rio 1 - Estrat√©gia Sa√∫de da Fam√≠lia 1",
                "capacity": 2,
                "equipment": ["Estetosc√≥pio", "Tensi√¥metro", "Balan√ßa", "Mesa ginecol√≥gica"],
                "location": "T√©rreo - Ala Oeste",
                "occupancy_type": "fixed",
                "is_active": True,
                "fixed_schedule": {
                    "team": "ESF 1",
                    "start": "07:00",
                    "end": "16:00"
                }
            },
            {
                "id": str(uuid.uuid4()),
                "name": "C2",
                "description": "Consult√≥rio 2 - Estrat√©gia Sa√∫de da Fam√≠lia 2", 
                "capacity": 2,
                "equipment": ["Estetosc√≥pio", "Tensi√¥metro", "Balan√ßa"],
                "location": "T√©rreo - Ala Oeste",
                "occupancy_type": "fixed",
                "is_active": True,
                "fixed_schedule": {
                    "team": "ESF 2",
                    "start": "07:00",
                    "end": "16:00"
                }
            },
            {
                "id": str(uuid.uuid4()),
                "name": "C3",
                "description": "Consult√≥rio 3 - Estrat√©gia Sa√∫de da Fam√≠lia 3",
                "capacity": 2,
                "equipment": ["Estetosc√≥pio", "Tensi√¥metro", "Balan√ßa"],
                "location": "T√©rreo - Ala Este",
                "occupancy_type": "fixed",
                "is_active": True,
                "fixed_schedule": {
                    "team": "ESF 3",
                    "start": "07:00", 
                    "end": "16:00"
                }
            },
            {
                "id": str(uuid.uuid4()),
                "name": "C4",
                "description": "Consult√≥rio 4 - Estrat√©gia Sa√∫de da Fam√≠lia 4",
                "capacity": 2,
                "equipment": ["Estetosc√≥pio", "Tensi√¥metro", "Balan√ßa"],
                "location": "T√©rreo - Ala Este",
                "occupancy_type": "fixed",
                "is_active": True,
                "fixed_schedule": {
                    "team": "ESF 4",
                    "start": "07:00",
                    "end": "16:00"
                }
            },
            {
                "id": str(uuid.uuid4()),
                "name": "C5", 
                "description": "Consult√≥rio 5 - Estrat√©gia Sa√∫de da Fam√≠lia 5",
                "capacity": 2,
                "equipment": ["Estetosc√≥pio", "Tensi√¥metro", "Balan√ßa"],
                "location": "1¬∫ Andar - Ala Norte",
                "occupancy_type": "fixed",
                "is_active": True,
                "fixed_schedule": {
                    "team": "ESF 5",
                    "start": "07:00",
                    "end": "16:00"
                }
            }
        ]
        
        db.consultorios.insert_many(consultorios_data)
        print(f"   ‚úÖ {len(consultorios_data)} consult√≥rios criados")
        
        # 3. Create Doctors
        print("üë®‚Äç‚öïÔ∏è Criando m√©dicos...")
        doctors_data = [
            {
                "id": str(uuid.uuid4()),
                "name": "Dr. Jo√£o Silva",
                "specialty": "Cl√≠nico Geral",
                "crm": "12345-SP",
                "phone": "(11) 99999-1111",
                "email": "dr.silva@consultorio.com",
                "is_active": True
            },
            {
                "id": str(uuid.uuid4()),
                "name": "Dra. Maria Santos",
                "specialty": "Pediatra", 
                "crm": "23456-SP",
                "phone": "(11) 99999-2222",
                "email": "dra.santos@consultorio.com",
                "is_active": True
            },
            {
                "id": str(uuid.uuid4()),
                "name": "Dr. Carlos Oliveira",
                "specialty": "Cardiologista",
                "crm": "34567-SP",
                "phone": "(11) 99999-3333", 
                "email": "dr.oliveira@consultorio.com",
                "is_active": True
            }
        ]
        
        db.doctors.insert_many(doctors_data)
        print(f"   ‚úÖ {len(doctors_data)} m√©dicos criados")
        
        # 4. Create Patients
        print("üè• Criando pacientes...")
        patients_data = [
            {
                "id": str(uuid.uuid4()),
                "name": "Ana Silva",
                "cpf": "123.456.789-01",
                "birth_date": "1985-03-15",
                "phone": "(11) 98888-1111",
                "email": "ana.silva@email.com",
                "address": "Rua das Flores, 123, Centro",
                "emergency_contact": "Jos√© Silva - (11) 98888-1112",
                "is_active": True
            },
            {
                "id": str(uuid.uuid4()),
                "name": "Pedro Santos", 
                "cpf": "234.567.890-12",
                "birth_date": "1990-07-22",
                "phone": "(11) 98888-2222",
                "email": "pedro.santos@email.com", 
                "address": "Av. Principal, 456, Vila Nova",
                "emergency_contact": "Maria Santos - (11) 98888-2223",
                "is_active": True
            },
            {
                "id": str(uuid.uuid4()),
                "name": "Carla Oliveira",
                "cpf": "345.678.901-23", 
                "birth_date": "1978-11-08",
                "phone": "(11) 98888-3333",
                "email": "carla.oliveira@email.com",
                "address": "Rua do Com√©rcio, 789, Centro",
                "emergency_contact": "Jo√£o Oliveira - (11) 98888-3334",
                "is_active": True
            }
        ]
        
        db.patients.insert_many(patients_data)
        print(f"   ‚úÖ {len(patients_data)} pacientes criados")
        
        print("\n" + "="*50)
        print("üéâ POPULA√á√ÉO COMPLETA!")
        print("="*50)
        print(f"üë• Usu√°rios: {db.users.count_documents({})}")
        print(f"üè• Consult√≥rios: {db.consultorios.count_documents({})}")
        print(f"üë®‚Äç‚öïÔ∏è M√©dicos: {db.doctors.count_documents({})}")
        print(f"üè• Pacientes: {db.patients.count_documents({})}")
        
        print("\nüí° Credenciais de acesso:")
        print("   üë®‚Äçüíº Admin: admin / admin123")
        print("   üìû Recep√ß√£o: recepcao / recepcao123") 
        print("   üë®‚Äç‚öïÔ∏è M√©dico: dr.silva / doctor123")
        
        client.close()
        
    except Exception as e:
        print(f"‚ùå Erro: {str(e)}")

if __name__ == "__main__":
    populate_atlas_direct()